# Generated by Django 4.2.16 on 2024-10-22 22:20

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Appointment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("datetime_of_appointment", models.DateTimeField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Scheduled"),
                            ("happened", "Happened"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="scheduled",
                        max_length=10,
                    ),
                ),
            ],
            options={
                "verbose_name": "Appointment",
                "verbose_name_plural": "Appointments",
                "ordering": ["-datetime_of_appointment"],
            },
        ),
        migrations.CreateModel(
            name="Disease",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "verbose_name": "Disease",
                "verbose_name_plural": "Diseases",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="DiseaseHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_of_disease", models.DateField()),
                ("end_of_disease", models.DateField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Disease history",
                "verbose_name_plural": "Diseases history",
                "ordering": ["-start_of_disease"],
            },
        ),
        migrations.CreateModel(
            name="Doctor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                (
                    "sex",
                    models.CharField(
                        choices=[("male", "Male"), ("female", "Female")], max_length=10
                    ),
                ),
                ("date_birth", models.DateField()),
                ("phone_number", models.CharField(max_length=15, unique=True)),
                (
                    "practice_start_date",
                    models.DateField(default=django.utils.timezone.now),
                ),
                ("education", models.CharField(max_length=100)),
                (
                    "photo",
                    models.ImageField(
                        blank=True, null=True, upload_to="media/doctors/"
                    ),
                ),
            ],
            options={"verbose_name": "Doctor", "verbose_name_plural": "Doctors",},
        ),
        migrations.CreateModel(
            name="Favor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "cost",
                    models.DecimalField(decimal_places=2, default=0, max_digits=8),
                ),
            ],
            options={
                "verbose_name": "Favor",
                "verbose_name_plural": "Favors",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Patient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                (
                    "sex",
                    models.CharField(
                        choices=[("male", "Male"), ("female", "Female")], max_length=10
                    ),
                ),
                ("date_birth", models.DateField()),
                ("phone_number", models.CharField(max_length=15, unique=True)),
                ("country", models.CharField(max_length=80)),
                ("city", models.CharField(max_length=80)),
                ("street", models.CharField(max_length=100)),
                (
                    "blood_type",
                    models.CharField(
                        choices=[
                            ("O+", "O+"),
                            ("O-", "O-"),
                            ("A+", "A+"),
                            ("A-", "A-"),
                            ("B+", "B+"),
                            ("B-", "B-"),
                            ("AB+", "AB+"),
                            ("AB-", "AB-"),
                        ],
                        max_length=5,
                    ),
                ),
                ("insurance", models.BooleanField(default=False)),
                (
                    "emergency_contact",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
            ],
            options={"verbose_name": "Patient", "verbose_name_plural": "Patients",},
        ),
        migrations.CreateModel(
            name="Specialisation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=80, unique=True)),
            ],
            options={
                "verbose_name": "Specialisation",
                "verbose_name_plural": "Specialisations",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Schedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "day",
                    models.CharField(
                        choices=[
                            ("monday", "Monday"),
                            ("tuesday", "Tuesday"),
                            ("wednesday", "Wednesday"),
                            ("thursday", "Thursday"),
                            ("friday", "Friday"),
                            ("saturday", "Saturday"),
                            ("sunday", "Sunday"),
                        ],
                        max_length=10,
                    ),
                ),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                ("minutes_per_patient", models.IntegerField()),
                ("cabinet_number", models.IntegerField()),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="repository.doctor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Schedule",
                "verbose_name_plural": "Schedules",
                "ordering": ["day", "start_time"],
            },
        ),
        migrations.AddConstraint(
            model_name="favor",
            constraint=models.UniqueConstraint(
                fields=("name", "cost"), name="uq_name_cost"
            ),
        ),
        migrations.AddConstraint(
            model_name="favor",
            constraint=models.CheckConstraint(
                check=models.Q(("cost__gte", 0)), name="ck_favor_cost"
            ),
        ),
        migrations.AddField(
            model_name="doctor",
            name="specialisation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT,
                to="repository.specialisation",
            ),
        ),
        migrations.AddField(
            model_name="diseasehistory",
            name="disease",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="repository.disease"
            ),
        ),
        migrations.AddField(
            model_name="diseasehistory",
            name="doctor",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="repository.doctor",
            ),
        ),
        migrations.AddField(
            model_name="diseasehistory",
            name="patient",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="repository.patient"
            ),
        ),
        migrations.AddField(
            model_name="appointment",
            name="doctor",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="repository.doctor"
            ),
        ),
        migrations.AddField(
            model_name="appointment",
            name="favor",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="repository.favor",
            ),
        ),
        migrations.AddField(
            model_name="appointment",
            name="patient",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="repository.patient"
            ),
        ),
        migrations.AddConstraint(
            model_name="schedule",
            constraint=models.UniqueConstraint(
                fields=("day", "start_time", "end_time", "cabinet_number"),
                name="unique_schedule",
            ),
        ),
        migrations.AddConstraint(
            model_name="schedule",
            constraint=models.CheckConstraint(
                check=models.Q(("end_time__gt", models.F("start_time"))),
                name="ck_end_after_start_time",
            ),
        ),
        migrations.AddConstraint(
            model_name="schedule",
            constraint=models.CheckConstraint(
                check=models.Q(("minutes_per_patient__gt", 0)),
                name="ck_minutes_per_patient",
            ),
        ),
        migrations.AddConstraint(
            model_name="schedule",
            constraint=models.CheckConstraint(
                check=models.Q(("cabinet_number__gt", 0)), name="ck_cabinet_number"
            ),
        ),
        migrations.AddConstraint(
            model_name="diseasehistory",
            constraint=models.CheckConstraint(
                check=models.Q(("end_of_disease__gt", models.F("start_of_disease"))),
                name="ck_end_after_start_disease",
            ),
        ),
        migrations.AddConstraint(
            model_name="appointment",
            constraint=models.UniqueConstraint(
                fields=("datetime_of_appointment", "patient"), name="uq_date_patient"
            ),
        ),
        migrations.AddConstraint(
            model_name="appointment",
            constraint=models.UniqueConstraint(
                fields=("datetime_of_appointment", "doctor"), name="uq_date_doctor"
            ),
        ),
    ]
